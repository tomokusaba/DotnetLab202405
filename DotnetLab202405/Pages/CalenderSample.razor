@page "/calendar"
<FluentStack Orientation="Orientation.Vertical" VerticalGap="20">

    <FluentLabel Typo="Typography.PageTitle">CalendarSample</FluentLabel>
    <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="10">
        <FluentStack Orientation="Orientation.Vertical">
            <FluentLabel Typo="Typography.Subject">範囲選択</FluentLabel>
            <FluentCalendar SelectMode="CalendarSelectMode.Range"
                            @bind-SelectedDates=@SelectedRange />
            <FluentLabel Typo="Typography.Body">Selected Days : @DisplaySelectedDays(SelectedRange)</FluentLabel>
        </FluentStack>
        <FluentStack Orientation="Orientation.Vertical">
            <FluentLabel Typo="Typography.Subject">複数選択</FluentLabel>
            <FluentCalendar SelectMode="CalendarSelectMode.Multiple"
                            @bind-SelectedDates=@SelectedDays />
            <FluentLabel Typo="Typography.Body">Selected Days : @DisplaySelectedDays(SelectedDays)</FluentLabel>
        </FluentStack>
    </FluentStack>
</FluentStack>
@code {
    private IEnumerable<DateTime> SelectedRange = new List<DateTime>();
    private IEnumerable<DateTime> SelectedDays = new List<DateTime>();


    private RenderFragment DisplaySelectedDays(IEnumerable<DateTime> days) => builder =>
    {
        builder.OpenElement(0, "ul");
        foreach (var day in days)
        {
            builder.OpenElement(1, "li");
            builder.AddContent(2, day.ToShortDateString());
            builder.CloseElement();
        }
        builder.CloseElement();
    };
}
